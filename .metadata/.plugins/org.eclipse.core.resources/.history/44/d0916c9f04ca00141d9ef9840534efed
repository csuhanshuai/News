package net.bangbao.ui;

import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.support.v4.app.FragmentTransaction;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import net.bangbao.AppConfig;
import net.bangbao.R;
import net.bangbao.UserConfig;
import net.bangbao.base.BaseActivity;
import net.bangbao.common.Ids;
import net.bangbao.common.UIHelper;
import net.bangbao.dao.AgentListApi.AgentInfo;
import net.bangbao.dao.BaseApi;
import net.bangbao.dao.ConsultMessApi;
import net.bangbao.http.AgentApiClient;
import net.bangbao.http.BaseApiClient;
import net.bangbao.widget.ShareCardDialog;

public class ConsultDetailActivity extends BaseActivity implements View.OnClickListener {
	
	private View LayoutZixun,LayoutFocus,fram_back,fram_card;
	
	private LinearLayout ShareCard;
	private Bitmap cardBitmap;
	
	private ImageView userImage;
	
	//代理人
	private AgentInfo agent;
	private Intent intent;
	
	private AgentApiClient agentClient = new AgentApiClient();
	private UserConfig userConfig;
	
	//加关注的text
	private TextView textFocus;
	
	//填写信息的属性
	private TextView username_text;
	private TextView sex_text;
	private TextView edu_text;
	private TextView from_text;
	private TextView star_text;
	private TextView years_text;
	private TextView honour_text;
	private TextView get_text; // 感悟
	
	@Override
	protected void onCreate(Bundle arg0) {
		super.onCreate(arg0);
		setContentView(R.layout.activity_consult_detail);
		intent = getIntent();
		if(intent != null){
			agent = (AgentInfo)intent.getBundleExtra("bundle").getSerializable("agent");
			init();
		}
		
		userConfig = AppConfig.getUser();
		agentClient.getConsultDetail(agent.user_id, this,ConsultMessApi.class,new BaseApiClient.CallBack<ConsultMessApi>() {

			@Override
			public void success(ConsultMessApi api) {
				
				username_text.setText(api.getNick_nm());
				sex_text.setText(Ids.getSex(api.getSex()));
				edu_text.setText(Ids.getEdu(api.getEdu_id()));
				from_text.setText(api.getProv_id() + "");
				star_text.setText(String.valueOf(agent.atte_num));
				years_text.setText(String.valueOf(agent.edu_id));
				honour_text.setText(api.getHonor_say());
				get_text.setText(api.getIns_say());
			}

			@Override
			public void fail(String error) {
				
			}
		});
		
	}

	private void init() {
		LayoutZixun = findViewById(R.id.button_zixun);
		LayoutFocus = findViewById(R.id.button_focus);
		fram_card = findViewById(R.id.fram_card);
		
		fram_card.setOnClickListener(this);
		LayoutFocus.setOnClickListener(this);
		LayoutZixun.setOnClickListener(this);
		
		fram_back = findViewById(R.id.fram_back);
		fram_back.setOnClickListener(this);
		textFocus = (TextView)findViewById(R.id.text_focus);
		
		username_text = (TextView)findViewById(R.id.username_text);
		sex_text = (TextView)findViewById(R.id.sex_text);
		edu_text = (TextView)findViewById(R.id.edu_text);
		from_text = (TextView)findViewById(R.id.from_text);
		star_text = (TextView)findViewById(R.id.star_text);
		years_text = (TextView)findViewById(R.id.years_text);
		honour_text = (TextView)findViewById(R.id.honour_text);
		get_text = (TextView)findViewById(R.id.get_text);
		
		ShareCard = (LinearLayout)findViewById(R.id.share_card);
		userImage = (ImageView)findViewById(R.id.user_image);
	}

	@Override
	public void onClick(View v) {
		
		switch (v.getId()) {
		case R.id.button_zixun:
			startChat();
			break;
		case R.id.button_focus:
			addFocus();
			break;
		case R.id.fram_back:
			onBackPressed();
			break;
		case R.id.fram_card:
			ShareCard.setDrawingCacheEnabled(true);        
			ShareCard.buildDrawingCache();
			cardBitmap = ShareCard.getDrawingCache();
			userImage.setImageBitmap(cardBitmap);
			
			ShareCardDialog dialog = new ShareCardDialog(cardBitmap);
			FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
			dialog.show(ft,"sdfds");
		default:
			break;
		}
	}

	private void startChat() {
		
		if(AppConfig.UserCategry == AppConfig.USER_TOLERATY){
			UIHelper.showToastMessage("您要登陆才能咨询");
			return;
		}
		
		if(AppConfig.UserCategry == AppConfig.USER_AGENT ){
			UIHelper.showToastMessage("顾问之间不能互相咨询");
		}
		Intent intent = new Intent(this,ChatToConsultActivity.class);
		intent.putExtra("target_id", String.valueOf(agent.user_id));
		intent.putExtra("target_categry",ChatToConsultActivity.TaAgent);
		startActivity(intent);
	}
	
	private void addFocus(){
		
		if(AppConfig.UserCategry == AppConfig.USER_TOLERATY){
			UIHelper.showToastMessage("您要登陆才能加关注");
			return;
		}
		
		if(AppConfig.UserCategry == AppConfig.USER_AGENT ){
			UIHelper.showToastMessage("顾问之间不能互相关注");
		}
		
		agentClient.addAgentFriends(userConfig.getUserId(), userConfig.getUserToken(), 
				    agent.user_id,this, BaseApi.class, new BaseApiClient.CallBack<BaseApi>() {

						@Override
						public void success(BaseApi api) {
							Log.d("aa",api.getRet_txt());
							textFocus.setText("已关注");
						}

						@Override
						public void fail(String error) {
							
						}
					});
	}
	
}

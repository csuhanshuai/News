package net.bangbao.ui;

import java.io.File;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import org.json.JSONObject;

import net.bangbao.AppConfig;
import net.bangbao.R;
import net.bangbao.UserConfig;
import net.bangbao.base.BaseActivity;
import net.bangbao.common.UIHelper;
import net.bangbao.dao.BaseApi;
import net.bangbao.dao.User.CustomerMessageStruct;
import net.bangbao.dao.User.PasswordMessageStruct;
import net.bangbao.http.ApiClient;
import net.bangbao.http.UploadAgent;
import net.bangbao.widget.SelectPicPopupWindow;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.Base64;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

public class CustomerMessageActivity extends BaseActivity implements View.OnClickListener{
	
	private TextView u_name;
	private EditText nick;
	private TextView button;
	private ImageView picture;
	
	public boolean isFromItent = false;
	SelectPicPopupWindow menuWindow; 
	private Intent dataIntent = null;
	public  Bitmap bi,photo;
	
	private EditText old_pwd,new_pwd,re_pwd;
	private TextView toast;
	
	private UserConfig userConfig;
	@Override
	protected void onCreate(Bundle arg0) {
		super.onCreate(arg0);
		setContentView(R.layout.customer_message);
		initViews();
	}

	private void initViews() {
		userConfig = AppConfig.getUser();
		u_name = (TextView) findViewById(R.id.u_name);
		u_name.setText(userConfig.getUserName());
		picture = (ImageView) findViewById(R.id.picture);
		
		nick = (EditText) findViewById(R.id.nickname);
		button =  (TextView) findViewById(R.id.modify);
		button.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				if(button.getText().equals("完成")) {
					new UploadAgent().uploadImage(getMyBitmap(), userConfig.getUserId(), userConfig.getUserToken(), 
							new UploadAgent.IUploadCallBack() {
								
								@Override
								public void uploadSuess(String success) {
									Map<String, Object> maps = getMapForJson(success);
									url = (String) maps.get("url");
									complete2();
									Log.d("bb", url);
									Log.d("bb", "success"+success);
								}
								
								@Override
								public void uploadFail(String error) {
									Log.d("bb", "error"+error);
									
								}
							});
				}
				
			}
		});
		
		old_pwd = (EditText) findViewById(R.id.old_pwd);
		new_pwd = (EditText) findViewById(R.id.new_pwd);
		re_pwd = (EditText) findViewById(R.id.confirm);
		
		toast = (TextView) findViewById(R.id.toast);
	}
	
	public static Map<String, Object> getMapForJson(String jsonStr){  
        JSONObject jsonObject ;  
        try {  
            jsonObject = new JSONObject(jsonStr);  
              
            Iterator<String> keyIter= jsonObject.keys();  
            String key;  
            Object value ;  
            Map<String, Object> valueMap = new HashMap<String, Object>();  
            while (keyIter.hasNext()) {  
                key = keyIter.next();  
                value = jsonObject.get(key);  
                valueMap.put(key, value);  
            }  
            return valueMap;  
        } catch (Exception e) {  
            // TODO: handle exception  
            e.printStackTrace();  
        }  
        return null;  
    }  
	
	 @Override
	    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
	    	switch (requestCode) {
			case 1:
				try{
					Log.d("bb", "---start");
					startPhotoZoom(data.getData());
					Log.d("bb", "---end");
				}catch(NullPointerException e){
					e.printStackTrace();
				}
				
				break;
			case 2:
				if(data != null){
					dataIntent = data;
					setPicToView(data);
				}
				break;
			case 3:
				File temp = new File(Environment.getExternalStorageDirectory()
						+ "/hs.jpg");
				startPhotoZoom(Uri.fromFile(temp));

			default:
				break;
			}
	    	super.onActivityResult(requestCode, resultCode, data);
	    }
	    /**
		 * 裁剪图片方法实现
		 * @param uri
		 */
		public void startPhotoZoom(Uri uri) {
			/*
			 * 至于下面这个Intent的ACTION是怎么知道的，大家可以看下自己路径下的如下网页
			 * yourself_sdk_path/docs/reference/android/content/Intent.html
			 * 直接在里面Ctrl+F搜：CROP ，之前小马没仔细看过，其实安卓系统早已经有自带图片裁剪功能,
			 * 是直接调本地库的，小马不懂C C++  这个不做详细了解去了，有轮子就用轮子，不再研究轮子是怎么
			 * 制做的了...吼吼
			 */
			Intent intent = new Intent("com.android.camera.action.CROP");
			intent.setDataAndType(uri, "image/*");
			//下面这个crop=true是设置在开启的Intent中设置显示的VIEW可裁剪
			intent.putExtra("crop", "true");
			// aspectX aspectY 是宽高的比例
			intent.putExtra("aspectX", 1);
			intent.putExtra("aspectY", 1);
			// outputX outputY 是裁剪图片宽高
			intent.putExtra("outputX", 300);
			intent.putExtra("outputY", 300);
			intent.putExtra("return-data", true);
			startActivityForResult(intent, 2);
		}
		
		/**
		 * 保存裁剪之后的图片数据
		 * @param picdata
		 */
		private void setPicToView(Intent picdata) {
			Bundle extras = picdata.getExtras();
			if (extras != null) {
				photo = extras.getParcelable("data");
				Drawable drawable = new BitmapDrawable(photo);
				picture.setImageBitmap(null);
				picture.setBackgroundDrawable(drawable);
			}
		}
		
		private Bitmap getMyBitmap(){
				Log.d("test","bit");
				picture.setDrawingCacheEnabled(true);
				if(picture.getDrawingCache() == null)
					Log.d("test","bit is null");
				if(isFromItent == false){
					return picture.getDrawingCache();
				}
				else
					return getBitmap(dataIntent);
				
		}
		
		//从Intent获取图片资源
		
		private Bitmap getBitmap(Intent picdata) {
			Bundle bun = picdata.getExtras();
			isFromItent = true;
			Bitmap photo = null;
			if(bun != null) {
				photo = bun.getParcelable("data");
			}
			
			return photo;
		}
		
	
	//为弹出窗口实现监听类  
    private OnClickListener  itemsOnClick = new OnClickListener(){  
  
        public void onClick(View v) {  
            menuWindow.dismiss();  
            switch (v.getId()) {  
            case R.id.btn_take_photo:  
            	Intent intent = new Intent(
						MediaStore.ACTION_IMAGE_CAPTURE);
				//下面这句指定调用相机拍照后的照片存储的路径
				intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri
						.fromFile(new File(Environment
								.getExternalStorageDirectory(),
								"xiaoma.jpg")));
				startActivityForResult(intent, 3);
                break;  
            case R.id.btn_pick_photo:
            	Intent pickIntent = new Intent(Intent.ACTION_PICK,null);
	        	pickIntent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, "image/*");
	        	startActivityForResult(pickIntent, 1);
                break;  
            default:  
                break;  
            }  
              
                  
        }  
          
    };  
	
	public static Bitmap convertStringToIcon(String st)  
    {  
        // OutputStream out;  
        Bitmap bitmap = null;  
        try  
        {  
            // out = new FileOutputStream("/sdcard/aa.jpg");  
            byte[] bitmapArray;  
            bitmapArray = Base64.decode(st, Base64.DEFAULT);  
            bitmap =  
                    BitmapFactory.decodeByteArray(bitmapArray, 0,  
                            bitmapArray.length);  
            // bitmap.compress(Bitmap.CompressFormat.PNG, 100, out);  
            return bitmap;  
        }  
        catch (Exception e)  
        {  
            return null;  
        }  
    }  
	
	public void setup(){
		button.setText("修改");
		nick.setEnabled(false);
		LinearLayout li = (LinearLayout) findViewById(R.id.old);
		LinearLayout li1 = (LinearLayout) findViewById(R.id.pw);
		LinearLayout li2 = (LinearLayout) findViewById(R.id.repw);
		li.setVisibility(View.GONE);
		li1.setVisibility(View.GONE);
		li2.setVisibility(View.GONE);
	}
	
	public void setup1(){
		button.setText("完成");
		nick.setEnabled(true);
		LinearLayout li = (LinearLayout) findViewById(R.id.old);
		LinearLayout li1 = (LinearLayout) findViewById(R.id.pw);
		LinearLayout li2 = (LinearLayout) findViewById(R.id.repw);
		li.setVisibility(View.VISIBLE);
		li1.setVisibility(View.VISIBLE);
		li2.setVisibility(View.VISIBLE);
	}
	
	public void complete2(){
		if(nick.getText().toString().trim().length() == 0){
			UIHelper.showToastMessage("昵称不能为空");
			return;
		}
		
		CustomerMessageStruct customer = new CustomerMessageStruct();
		PasswordMessageStruct pass = new PasswordMessageStruct();
		//昵称
		String ni = nick.getText().toString().trim();
		customer.nick_nm = ni;
		//原始密码
		String old = old_pwd.getText().toString().trim();
		pass.old_pwd = old;
		//新密码
		String ne = new_pwd.getText().toString().trim();
		pass.new_pwd = ne;
		//确认密码
		String re = re_pwd.getText().toString().trim();
		if(!re.equals(ne)){
			re_pwd.setText(null);
			toast.setText("密码不一致,请重新确认密码");
		}
		button.setEnabled(false);
		new ApiClient().changePassword(pass, userConfig.getUserName(), this, BaseApi.class,
				new ApiClient.CallBack<BaseApi>(){

					@Override
					public void success(BaseApi api) {
						button.setEnabled(true);
						if(api == null) return;
						if(api.getRet_cd() == 0){
							UIHelper.showToastMessage("密码修改成功");
						}
						if(api.getRet_cd() == 14){
							UIHelper.showToastMessage(api.getRet_txt());
						}
					}

					@Override
					public void fail(String error) {
						UIHelper.showToastMessage(
								"当前网络有问题！");
						button.setEnabled(true);
					}
			
		});
		new ApiClient().deliverCustomerMessage(customer, userConfig.getUserId(), userConfig.getUserToken(), this, BaseApi.class,
				new  ApiClient.CallBack<BaseApi>(){

					@Override
					public void success(BaseApi api) {
						button.setEnabled(true);
						if(api == null) return;
						if(api.getRet_cd() == 0){
							UIHelper.showToastMessage("昵称提交成功");
							setup();
						}
					}

					@Override
					public void fail(String error) {
						UIHelper.showToastMessage(
								"当前网络有问题！");
						button.setEnabled(true);
					}
			
		});
		
		
		
	}
	public void back(View v)
	{
		onBackPressed();
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.modify:
			complete2();
			break;

		default:
			break;
		}
		
	}

}
